{
  "type": "module",
  "license": "ISC",
  "description": "various esmock unit tests",
  "repository": {
    "type": "git",
    "url": "https://github.com/iambumblehead/esmock.git"
  },
  "main": "package.json.esmock.export.js",
  "exports": {
    "types": "./package.json.esmock.export.d.ts",
    "import": "./package.json.esmock.export.js"
  },
  "imports": {
    "#sub": "./local/subpath.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "@aws-sdk/client-s3": "^3.408.0",
    "babelGeneratedDoubleDefault": "file:./local/babelGeneratedDoubleDefault",
    "eslint": "^8.54.0",
    "form-urlencoded": "^6.0.7",
    "meow": "12.0.1",
    "npm-run-all": "^4.1.5",
    "pg": "^8.7.3",
    "run-script-os": "^1.1.6",
    "sinon": "^12.0.1"
  },
  "scripts": {
    "mini:esmock": "cd .. && cd src && npx esbuild esmock.js --minify --bundle --allow-overwrite --platform=node --format=esm --external:pnpapi --outfile=esmock.js",
    "mini:esmockLoader": "cd .. && cd src && npx esbuild esmockLoader.js --minify --bundle --allow-overwrite --platform=node --format=esm --outfile=esmockLoader.js",
    "mini": "npm run mini:esmock && npm run mini:esmockLoader",
    "isnodelt18": "node -e \"+process.versions.node.split('.')[0] < 18 || process.exit(1)\"",
    "isnodegt19": "node -e \"+process.versions.node.split('.')[0] > 19 || process.exit(1)\"",
    "isnodenight": "node -e \"process.versions.node.includes('night') || process.exit(1)\"",
    "install:esmock": "cd .. && npm install",
    "install:test-ava": "cd tests-ava && npm install",
    "install:test-uvu": "cd tests-uvu && npm install",
    "install:test-tsm": "cd tests-tsm && npm install",
    "install:test-tsx": "cd tests-tsx && npm install",
    "install:test-node": "cd tests-node && npm install",
    "install:test-jest": "cd tests-jest && npm install",
    "install:test-jest-ts": "cd tests-jest-ts && npm install",
    "install:test-source-map": "cd tests-source-map && npm install",
    "install:test-no-loader": "cd tests-no-loader && npm install",
    "install:test-nodets": "cd tests-nodets && npm install",
    "install:test-mocha": "cd tests-mocha && npm install",
    "install:test-workspaces": "cd tests-workspaces && npm install",
    "install:all": "node --version && npm install && npm-run-all install:test*",
    "test:test-uvu": "cd tests-uvu && npm test",
    "test:test-mocha": "cd tests-mocha && npm test",
    "test:test-ava": "cd tests-ava && npm test",
    "test:test-tsx": "cd tests-tsx && npm test",
    "test:node19-tsm": " cd tests-tsm && npm test",
    "test:node18-test-tsm": "npm run isnodenight || npm run test:node19-tsm",
    "test:node18-test-tsx": "cd tests-tsx && npm run test",
    "test:node18-test-node": "cd tests-node && npm test",
    "test:node18-test-jest": "cd tests-jest && npm test",
    "test:node18-test-jest-ts": "cd tests-jest-ts && npm test",
    "test:node18-test-nodets": "cd tests-nodets && npm test",
    "test:node18-test-source-map": "cd tests-source-map && npm test",
    "test:node18-test-no-loader": "cd tests-no-loader && npm test",
    "test:node18-test-workspaces": "cd tests-workspaces && npm test",
    "test:node18:all": "npm run isnodelt18 || npm-run-all test:node18-test*",
    "test:all": "npm-run-all test:test* && npm run test:node18:all",
    "test:all-cover": "c8 --src=../src/* npm run test:all",
    "test:all-ci": "npm run mini && npm run test:all"
  }
}
